{
	"name": "DF_Movies",
	"properties": {
		"description": "Hands on da criação de um DataFlow para o arquivo CSV de Movies.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DB_Movies_RAW",
						"type": "DatasetReference"
					},
					"name": "MoviesDL"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DB_Movies_Gold",
						"type": "DatasetReference"
					},
					"name": "MoviesDLExport"
				}
			],
			"transformations": [
				{
					"name": "SelectCorrCol"
				},
				{
					"name": "TransfColParaInt"
				},
				{
					"name": "FilmesAcima1950"
				},
				{
					"name": "DerivadaGenres"
				},
				{
					"name": "TransfYearToPositive"
				},
				{
					"name": "RankMoviesByRatings"
				},
				{
					"name": "Agregacao1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDL",
				"MoviesDL select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          {Rotten Tomato} = {Rotton Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCorrCol",
				"SelectCorrCol cast(output(",
				"          year as integer '000',",
				"          Rating as integer '000',",
				"          {Rotten Tomato} as integer '000'",
				"     ),",
				"     errors: true) ~> TransfColParaInt",
				"TransfYearToPositive filter(year > 1950) ~> FilmesAcima1950",
				"FilmesAcima1950 derive(PrimaryGenre = iif(locate('|', genres)>1, left(genres,locate('|', genres) - 1), genres)) ~> DerivadaGenres",
				"TransfColParaInt derive(year = iif(year < 0, abs(year), year)) ~> TransfYearToPositive",
				"DerivadaGenres window(over(PrimaryGenre,",
				"          year),",
				"     asc({Rotten Tomato}, true),",
				"     RatingsRank = rank()) ~> RankMoviesByRatings",
				"RankMoviesByRatings aggregate(groupBy(PrimaryGenre,",
				"          year),",
				"     AverageRatings = avg({Rotten Tomato}),",
				"          HighestRate = first(title),",
				"          LowestRate = last(title),",
				"          NumberOfMovies = count()) ~> Agregacao1",
				"Agregacao1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MoviesDBFinal'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> MoviesDLExport"
			]
		}
	}
}